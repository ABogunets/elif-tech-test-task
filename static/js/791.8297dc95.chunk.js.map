{"version":3,"file":"static/js/791.8297dc95.chunk.js","mappings":"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","sources":["pages/Cart-page.styled.js","components/Cart/CartList/CartList.styled.js","components/Cart/CartCard/CartCard.styled.js","components/Cart/CartCard/CartCard.jsx","components/Cart/CartList/CartList.jsx","../node_modules/nanoid/index.browser.js","components/Cart/UserForm/UserForm.styled.jsx","components/Cart/UserForm/UserForm.jsx","pages/Cart-page.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 10px 10px;\r\n`;\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const WrapperSubmit = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: 10px 50px;\r\n`;\r\nexport const TotalPrice = styled.p`\r\n  font-size: 20px;\r\n  line-height: 1.22;\r\n  font-weight: 600;\r\n  margin-right: 100px;\r\n`;\r\n\r\nexport const SubmitBtn = styled.button`\r\n  padding: 8px 10px;\r\n\r\n  border: 2px solid #471ca9;\r\n  border-radius: 5px;\r\n\r\n  text-decoration: none;\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  color: #471ca9;\r\n  text-transform: uppercase;\r\n  font-size: 14px;\r\n  line-height: 1.22;\r\n  font-weight: 600;\r\n\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #e4bd50;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n  width: 100vw;\r\n  padding: 10px 10px;\r\n  border-radius: 10px;\r\n  background-color: #90c6f2;\r\n`;\r\nexport const Wrapper = styled.div`\r\n  height: 73vh;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nexport const CartListWrapper = styled.ul`\r\n  width: 75%;\r\n\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #90c6f2;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CartCardWrapper = styled.li`\r\n  display: flex;\r\n\r\n  border-radius: 5px;\r\n  background-color: aliceblue;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n  overflow: hidden;\r\n`;\r\nexport const ImageWrapper = styled.div`\r\n  padding: 10px 10px;\r\n  > img {\r\n    max-width: 100%;\r\n    height: auto;\r\n\r\n    border-radius: 5px;\r\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    &:hover {\r\n      transform: scale(1.03);\r\n    }\r\n  }\r\n  > button {\r\n    margin-top: 10px;\r\n    padding: 5px 10px;\r\n    background-color: DarkSeaGreen;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    color: white;\r\n    &:hover {\r\n      background-color: yellowgreen;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DataWrapper = styled.div`\r\n  width: 60%;\r\n  padding: 10px 10px;\r\n  > p {\r\n    margin-top: 30px;\r\n    text-align: right;\r\n    margin-right: 20px;\r\n  }\r\n  > h2 {\r\n    font-size: 16px;\r\n    margin-left: 20px;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  text-align: center;\r\n  outline: none;\r\n  padding: 5px 5px;\r\n  margin-left: auto;\r\n  margin-right: 20px;\r\n  justify-content: ;\r\n  margin-top: 10px;\r\n  ::-webkit-inner-spin-button,\r\n  ::-webkit-outer-spin-button {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","// import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  CartCardWrapper,\r\n  ImageWrapper,\r\n  DataWrapper,\r\n  Input,\r\n} from \"components/Cart/CartCard/CartCard.styled\";\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"App\";\r\n\r\nexport const CartCard = ({ id, imageURL, dishName, price }) => {\r\n  const context = useContext(Context);\r\n  const [dishQuantity, setDishQuantity] = useState(1);\r\n\r\n  const deleteCartCard = (cardId) => {\r\n    return context.setCartData(\r\n      context.cartData.filter((card) => card.id !== cardId)\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const quantityValue = e.currentTarget.value;\r\n    setDishQuantity(quantityValue);\r\n    const updatedCartCard = context.cartData.map((card) => {\r\n      if (card.id === id) {\r\n        return { ...card, quantity: quantityValue };\r\n      } else {\r\n        return card;\r\n      }\r\n    });\r\n    return context.setCartData(updatedCartCard);\r\n  };\r\n\r\n  return (\r\n    <CartCardWrapper>\r\n      <ImageWrapper>\r\n        <img src={imageURL} alt=\"\" />\r\n        <button onClick={() => deleteCartCard(id)}>Remove from Cart</button>\r\n      </ImageWrapper>\r\n      <DataWrapper>\r\n        <h2>{dishName}</h2>\r\n        <p>{price}$</p>\r\n        <Input\r\n          type=\"number\"\r\n          name=\"quantity\"\r\n          step=\"1\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          value={dishQuantity}\r\n          onChange={handleChange}\r\n        />\r\n      </DataWrapper>\r\n    </CartCardWrapper>\r\n  );\r\n};\r\n\r\n// ImageGalleryItem.propTypes = {\r\n//   webImage: PropTypes.string.isRequired,\r\n//   largeImage: PropTypes.string.isRequired,\r\n//   onClick: PropTypes.func,\r\n// };\r\n","import {\r\n  CartListWrapper,\r\n  Container,\r\n  Wrapper,\r\n} from \"components/Cart/CartList/CartList.styled\";\r\nimport { CartCard } from \"components/Cart/CartCard/CartCard\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"App\";\r\n\r\nexport const CartList = () => {\r\n  const context = useContext(Context);\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <CartListWrapper>\r\n          {context.cartData.map(({ id, imageURL, dishName, price }) => (\r\n            <CartCard\r\n              key={id}\r\n              id={id}\r\n              imageURL={imageURL}\r\n              dishName={dishName}\r\n              price={price}\r\n            />\r\n          ))}\r\n        </CartListWrapper>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n  width: 400px;\r\n  padding: 10px 10px;\r\n  border-radius: 10px;\r\n  background-color: #90c6f2;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 16px;\r\n  color: #4b2a99;\r\n  padding: 5px 0px;\r\n`;\r\n\r\nexport const FormWrapper = styled.form`\r\n  border: 1px solid SteelBlue;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px 25px 5px 5px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  padding: 5px 5px;\r\n  color: Navy;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border: none;\r\n  padding: 5px 5px;\r\n  &:focus {\r\n    outline: 2px solid SteelBlue;\r\n  }\r\n  color: Navy;\r\n`;\r\n\r\nexport const SubmitBtn = styled.button`\r\n  margin-right: auto;\r\n  margin-top: 10px;\r\n  border: none;\r\n  padding: 5px 20px;\r\n  border-radius: 2px;\r\n  color: white;\r\n  cursor: pointer;\r\n  background-color: SteelBlue;\r\n\r\n  &:hover {\r\n    background-color: #471ca9;\r\n  }\r\n  &.active {\r\n    background-color: #471ca9;\r\n  }\r\n`;\r\n","import { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\nimport {\r\n  Container,\r\n  Title,\r\n  FormWrapper,\r\n  Label,\r\n  Input,\r\n} from \"components/Cart/UserForm/UserForm.styled\";\r\n\r\nimport { addOrder } from \"services/service-api.js\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"App\";\r\n\r\nexport const UserForm = ({ totalPrice }) => {\r\n  const context = useContext(Context);\r\n\r\n  const nameInputId = nanoid();\r\n  const emailInputId = nanoid();\r\n  const phoneInputId = nanoid();\r\n  const addressInputId = nanoid();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n\r\n    const formData = {\r\n      name: form.elements.name.value,\r\n      email: form.elements.email.value,\r\n      phone: form.elements.phone.value,\r\n      address: form.elements.address.value,\r\n    };\r\n    const order = { ...formData, ...context.cartData, totalPrice };\r\n\r\n    const placeOrder = async () => {\r\n      try {\r\n        const orderData = await addOrder(order);\r\n        console.table(\"YOUR ORDER:\", orderData);\r\n        if (orderData.length !== 0) {\r\n          toast.success(`Your order has been placed!`);\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n        toast.error(\r\n          `Sorry, something went wrong with the server, please try again.`\r\n        );\r\n      }\r\n    };\r\n    placeOrder();\r\n    form.reset();\r\n    context.setCartData([]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Client data:</Title>\r\n      <FormWrapper onSubmit={handleSubmit} id=\"userForm\">\r\n        <Label htmlFor={nameInputId}>Name:</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          id={nameInputId}\r\n        />\r\n        <Label htmlFor={emailInputId}>Email:</Label>\r\n        <Input type=\"email\" name=\"email\" required id={emailInputId} />\r\n\r\n        <Label htmlFor={phoneInputId}>Phone:</Label>\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          id={phoneInputId}\r\n        />\r\n        <Label htmlFor={addressInputId}>Address:</Label>\r\n        <Input type=\"text\" name=\"address\" required id={addressInputId} />\r\n      </FormWrapper>\r\n      <ToastContainer autoClose={3000} />\r\n    </Container>\r\n  );\r\n};\r\n","import {\r\n  Container,\r\n  Wrapper,\r\n  WrapperSubmit,\r\n  TotalPrice,\r\n  SubmitBtn,\r\n} from \"./Cart-page.styled\";\r\nimport { CartList } from \"components/Cart/CartList/CartList\";\r\nimport { UserForm } from \"components/Cart/UserForm/UserForm\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"App\";\r\n\r\nconst CartPage = () => {\r\n  const context = useContext(Context);\r\n  const totalPrice = () => {\r\n    return context.cartData\r\n      .reduce((total, card) => {\r\n        return total + card.price * card.quantity;\r\n      }, 0)\r\n      .toFixed(2);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <UserForm totalPrice={totalPrice()} />\r\n        <CartList />\r\n      </Wrapper>\r\n      <WrapperSubmit>\r\n        <TotalPrice>Total price: {totalPrice()}$</TotalPrice>\r\n        <SubmitBtn type=\"submit\" form=\"userForm\">\r\n          Submit\r\n        </SubmitBtn>\r\n      </WrapperSubmit>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","WrapperSubmit","_templateObject3","TotalPrice","_templateObject4","SubmitBtn","_templateObject5","CartListWrapper","CartCardWrapper","ImageWrapper","DataWrapper","Input","CartCard","_ref","id","imageURL","dishName","price","context","useContext","Context","_useState","useState","_useState2","_slicedToArray","dishQuantity","setDishQuantity","_jsxs","children","_jsx","src","alt","onClick","cardId","setCartData","cartData","filter","card","type","name","step","min","max","value","onChange","e","quantityValue","currentTarget","updatedCartCard","map","_objectSpread","quantity","CartList","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","Title","FormWrapper","Label","_templateObject6","UserForm","totalPrice","nameInputId","emailInputId","phoneInputId","addressInputId","onSubmit","preventDefault","form","formData","elements","email","phone","address","order","placeOrder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderData","wrap","_context","prev","next","addOrder","sent","console","table","toast","t0","log","message","stop","apply","reset","htmlFor","pattern","title","required","ToastContainer","autoClose","total","toFixed"],"sourceRoot":""}