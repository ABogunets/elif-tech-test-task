{"version":3,"file":"static/js/13.c7c3ae9f.chunk.js","mappings":"yMAEaA,EAAYC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uFAM1BC,EAAkBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8UCN3BG,EAAcL,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2rBAgCvBI,EAAQN,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mN,2BC7BlBK,EAAW,SAAHC,GAA2C,IAArCC,EAAED,EAAFC,GAAIC,EAAQF,EAARE,SAAUC,EAAQH,EAARG,SAAUC,EAAKJ,EAALI,MAC3CC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAS3B,OACEC,EAAAA,EAAAA,MAACX,EAAW,CAAAY,SAAA,EACVC,EAAAA,EAAAA,KAACZ,EAAK,CAACa,IAAKT,EAAUU,IAAI,MAC1BF,EAAAA,EAAAA,KAAA,MAAAD,SAAKN,KACLK,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAIL,EAAM,QACVM,EAAAA,EAAAA,KAAA,UAAQG,QAAS,kBAZGC,EAYkBb,EAXxCc,QAAQC,IAAI,wBAAyBX,EAAQY,UACtCZ,EAAQa,YACbb,EAAQY,SAASE,QAAO,SAACC,GAAI,OAAKA,EAAKnB,KAAOa,CAAM,KAHjC,IAACA,CAYqB,EAACL,SAAC,uBAGjD,ECbaY,EAAW,WACtB,IAAMhB,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAE3B,OADAQ,QAAQC,IAAI,mBAAoBX,EAAQY,WAEtCP,EAAAA,EAAAA,KAACnB,EAAS,CAAAkB,UACRC,EAAAA,EAAAA,KAACf,EAAe,CAAAc,SACbJ,EAAQY,SAASK,KAAI,SAAAtB,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAQF,EAARE,SAAUC,EAAQH,EAARG,SAAUC,EAAKJ,EAALI,MAAK,OACpDM,EAAAA,EAAAA,KAACX,EAAQ,CAEPE,GAAIA,EACJC,SAAUA,EACVC,SAAUA,EACVC,MAAOA,GAJFH,EAKL,OAKZ,EC1BaV,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qECYnC,EATqB,WACnB,OACEgB,EAAAA,EAAAA,KAACnB,EAAS,CAAAkB,UAERC,EAAAA,EAAAA,KAACW,EAAQ,KAGf,C","sources":["components/CartList/CartList.styled.js","components/CartCard/CartCard.styled.js","components/CartCard/CartCard.jsx","components/CartList/CartList.jsx","pages/Cart-page.styled.js","pages/Cart-page.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n  padding: 10px 10px;\r\n  border-radius: 10px;\r\n  background-color: #90c6f2;\r\n`;\r\n\r\nexport const CartListWrapper = styled.ul`\r\n  /* outline: 1px solid tomato; */\r\n\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #90c6f2;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CartWrapper = styled.li`\r\n  /* outline: 1px solid tomato; */\r\n\r\n  border-radius: 5px;\r\n  background-color: aliceblue;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n  overflow: hidden;\r\n  > p {\r\n    text-align: right;\r\n    margin-right: 20px;\r\n  }\r\n  > h2 {\r\n    font-size: 16px;\r\n    margin-left: 20px;\r\n    margin-top: 10px;\r\n  }\r\n  > button {\r\n    margin: 0 0 10px 10px;\r\n    padding: 5px 10px;\r\n    background-color: DarkSeaGreen;\r\n    /* color: #471ca9; */\r\n    /* border: 1px solid black; */\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: yellowgreen;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  border-radius: 5px 5px 0 0;\r\n  /* object-fit: cover; */\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    transform: scale(1.03);\r\n  }\r\n`;\r\n","// import PropTypes from \"prop-types\";\r\nimport { CartWrapper, Image } from \"components/CartCard/CartCard.styled\";\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"App\";\r\n\r\nexport const CartCard = ({ id, imageURL, dishName, price }) => {\r\n  const context = useContext(Context);\r\n\r\n  const deleteCartCard = (cardId) => {\r\n    console.log(\"context.cartCard :>> \", context.cartData);\r\n    return context.setCartData(\r\n      context.cartData.filter((card) => card.id !== cardId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <CartWrapper>\r\n      <Image src={imageURL} alt=\"\" />\r\n      <h2>{dishName}</h2>\r\n      <p>{price}$</p>\r\n      <button onClick={() => deleteCartCard(id)}>Remove from Cart</button>\r\n    </CartWrapper>\r\n  );\r\n};\r\n\r\n// ImageGalleryItem.propTypes = {\r\n//   webImage: PropTypes.string.isRequired,\r\n//   largeImage: PropTypes.string.isRequired,\r\n//   onClick: PropTypes.func,\r\n// };\r\n","// import PropTypes from 'prop-types';\r\nimport {\r\n  CartListWrapper,\r\n  Container,\r\n} from \"components/CartList/CartList.styled\";\r\nimport { CartCard } from \"components/CartCard/CartCard\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"App\";\r\n\r\nexport const CartList = () => {\r\n  const context = useContext(Context);\r\n  console.log(\"ContextData :>> \", context.cartData);\r\n  return (\r\n    <Container>\r\n      <CartListWrapper>\r\n        {context.cartData.map(({ id, imageURL, dishName, price }) => (\r\n          <CartCard\r\n            key={id}\r\n            id={id}\r\n            imageURL={imageURL}\r\n            dishName={dishName}\r\n            price={price}\r\n          />\r\n        ))}\r\n      </CartListWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// ImageGallery.propTypes = {\r\n//   items: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.number.isRequired,\r\n//       webformatURL: PropTypes.string.isRequired,\r\n//       largeImageURL: PropTypes.string.isRequired,\r\n//     })\r\n//   ),\r\n// };\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px 30px;\r\n  /* background-color: #90c6f2; */\r\n`;\r\n","import { CartList } from \"components/CartList/CartList\";\r\nimport { Container } from \"./Cart-page.styled\";\r\n\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst ShoppingCart = () => {\r\n  return (\r\n    <Container>\r\n      {/* <Form></Form> */}\r\n      <CartList />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShoppingCart;\r\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","CartListWrapper","_templateObject2","CartWrapper","Image","CartCard","_ref","id","imageURL","dishName","price","context","useContext","Context","_jsxs","children","_jsx","src","alt","onClick","cardId","console","log","cartData","setCartData","filter","card","CartList","map"],"sourceRoot":""}